(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{444:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"你知道vue的模板语法用的是哪个web模板引擎的吗？说说你对这模板引擎的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#你知道vue的模板语法用的是哪个web模板引擎的吗？说说你对这模板引擎的理解","aria-hidden":"true"}},[t._v("#")]),t._v(" 你知道vue的模板语法用的是哪个web模板引擎的吗？说说你对这模板引擎的理解")]),t._v(" "),a("p",[t._v("​\t\tVue.js 使用了基于 HTML 的模板语法，允许开发者声明式地将 DOM 绑定至底层 Vue 实例的数据。所有 Vue.js 的模板都是合法的 HTML ，所以能被遵循规范的浏览器和 HTML 解析器解析。")]),t._v(" "),a("p",[t._v("​\t\t在底层的实现上，Vue 将模板编译成虚拟 DOM 渲染函数。结合响应系统，Vue 能够智能地计算出最少需要重新渲染多少组件，并把 DOM 操作次数减到最少。")]),t._v(" "),a("p",[t._v("​\t\t数据绑定最常见的形式就是使用“Mustache”语法 (双大括号) 的文本插值：")]),t._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Message: {{ msg }}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("​\t\tMustache 标签将会被替代为对应数据对象上 "),a("code",[t._v("msg")]),t._v(" 属性的值。无论何时，绑定的数据对象上 "),a("code",[t._v("msg")]),t._v(" 属性发生了改变，插值处的内容都会更新。")])])}),[],!1,null,null,null);s.default=n.exports}}]);